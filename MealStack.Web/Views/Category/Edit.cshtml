<!-- 1. Fixed Edit.cshtml with debug information -->
@model MealStack.Infrastructure.Data.Entities.CategoryEntity

@{
ViewData["Title"] = "Edit Category";
ViewData["PageTitle"] = $"Edit Category: {Model.Name}";
ViewData["PageDescription"] = "Modify category settings and color theme";
}

<partial name="_PageHeader" />
<partial name="_MessageAlerts" />

<div class="container">
    <!-- Debug Information Panel -->
    @if (User.IsInRole("Admin"))
    {
    <div class="alert alert-info mb-4">
        <h6>Debug Information:</h6>
        <p><strong>Current Category ID:</strong> @Model.Id</p>
        <p><strong>Current ColorClass:</strong> @(Model.ColorClass ?? "null")</p>
        <p><strong>Current Name:</strong> @Model.Name</p>
    </div>
    }

    <div class="card shadow-sm">
        <div class="card-header bg-warning text-dark">
            <h5 class="mb-0">
                <i class="bi bi-pencil me-2"></i>Edit Category: @Model.Name
            </h5>
        </div>
        <div class="card-body">
            <form asp-action="Edit" method="post" enctype="multipart/form-data">
                <input type="hidden" asp-for="Id" />
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Name" class="form-label">Category Name</label>
                            <input asp-for="Name" class="form-control" required />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="3"
                                      placeholder="Brief description of this category (optional)"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ColorClass" class="form-label">Color Theme</label>
                            <select asp-for="ColorClass" class="form-select" id="colorSelect" required>
                                <option value="">Select a color theme</option>
                                @foreach (var color in ViewBag.ColorOptions as Dictionary<string, string>)
                                {
                                <option value="@color.Key" selected="@(Model.ColorClass == color.Key)">@color.Value</option>
                                }
                            </select>
                            <span asp-validation-for="ColorClass" class="text-danger"></span>
                            <small class="form-text text-muted">This color will be used for category pills and badges throughout the site</small>
                        </div>

                        <div class="mb-3">
                            <label for="ImageFile" class="form-label">Category Image (Optional)</label>
                            <input type="file" class="form-control" name="ImageFile" id="ImageFile" accept="image/*" />
                            @if (!string.IsNullOrEmpty(Model.ImagePath))
                            {
                            <div class="mt-2">
                                <img src="@Model.ImagePath" alt="Current Image" class="img-thumbnail" style="max-height: 100px;" />
                                <div class="form-text">Current image</div>
                            </div>
                            }
                            <small class="form-text text-muted">Upload a new image to replace the current one</small>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <!-- Current Preview -->
                        <div class="mb-3">
                            <label class="form-label">Current Appearance</label>
                            <div class="border rounded p-3 bg-light">
                                <div class="mb-2">
                                    <strong>Category Pill:</strong>
                                </div>
                                <div class="mb-3">
                                    <span class="category-pill bg-@(string.IsNullOrEmpty(Model.ColorClass) ? "secondary" : Model.ColorClass)">
                                        @Model.Name
                                    </span>
                                </div>

                                <div class="mb-2">
                                    <strong>Badge:</strong>
                                </div>
                                <div>
                                    <span class="badge bg-@(string.IsNullOrEmpty(Model.ColorClass) ? "secondary" : Model.ColorClass)">
                                        @Model.Name
                                    </span>
                                </div>
                            </div>
                        </div>

                        <!-- Live Preview -->
                        <div class="mb-3">
                            <label class="form-label">Live Preview</label>
                            <div class="border rounded p-3 bg-light">
                                <div class="mb-2">
                                    <strong>Category Pill Preview:</strong>
                                </div>
                                <div class="mb-3">
                                    <span id="categoryPillPreview" class="category-pill bg-@(string.IsNullOrEmpty(Model.ColorClass) ? "secondary" : Model.ColorClass)">
                                        @Model.Name
                                    </span>
                                </div>

                                <div class="mb-2">
                                    <strong>Badge Preview:</strong>
                                </div>
                                <div>
                                    <span id="badgePreview" class="badge bg-@(string.IsNullOrEmpty(Model.ColorClass) ? "secondary" : Model.ColorClass)">
                                        @Model.Name
                                    </span>
                                </div>
                            </div>
                        </div>

                        <!-- Color Reference -->
                        <div class="mb-3">
                            <label class="form-label">Available Colors</label>
                            <div class="border rounded p-3 bg-light">
                                <div class="row g-2">
                                    @foreach (var color in ViewBag.ColorOptions as Dictionary<string, string>)
                                    {
                                    <div class="col-6 col-sm-4">
                                        <div class="d-flex align-items-center">
                                            <span class="badge bg-@color.Key me-2">‚óè</span>
                                            <small>@color.Value</small>
                                        </div>
                                    </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="mt-4">
                    <button type="submit" class="btn btn-warning">
                        <i class="bi bi-check-circle me-1"></i>Update Category
                    </button>
                    <a asp-action="Index" class="btn btn-secondary">
                        <i class="bi bi-arrow-left me-1"></i>Back to Categories
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script>
    $(document).ready(function() {
        // Debug current state
        console.log('Current Category ID:', @Model.Id);
        console.log('Current ColorClass:', '@(Model.ColorClass ?? "null")');

        $('#colorSelect').on('change', function() {
            const selectedColor = $(this).val();
            const categoryName = $('#Name').val() || 'Sample Category';

            console.log('Color changed to:', selectedColor);

            if (selectedColor) {
                $('#categoryPillPreview')
                    .removeClass()
                    .addClass(`category-pill bg-${selectedColor}`)
                    .text(categoryName);

                $('#badgePreview')
                    .removeClass()
                    .addClass(`badge bg-${selectedColor}`)
                    .text(categoryName);
            } else {
                $('#categoryPillPreview')
                    .removeClass()
                    .addClass('category-pill bg-secondary')
                    .text(categoryName);

                $('#badgePreview')
                    .removeClass()
                    .addClass('badge bg-secondary')
                    .text(categoryName);
            }
        });

        $('#Name').on('input', function() {
            const categoryName = $(this).val() || 'Sample Category';
            $('#categoryPillPreview').text(categoryName);
            $('#badgePreview').text(categoryName);
        });

        // Debug form submission
        $('form').on('submit', function() {
            console.log('Form submitting with ColorClass:', $('#ColorClass').val());
            console.log('Form submitting with Name:', $('#Name').val());
            console.log('Form submitting with Description:', $('#Description').val());
        });
    });
</script>
}