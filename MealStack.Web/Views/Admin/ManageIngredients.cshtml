@model IEnumerable<MealStack.Infrastructure.Data.Entities.IngredientEntity>

@{
ViewData["Title"] = "Manage Ingredients";
var totalIngredients = ViewBag.TotalIngredients ?? 0;
var isAdminView = User.IsInRole("Admin");
}

<!-- Page Header -->
@{
ViewData["PageTitle"] = "Ingredient Management";
ViewData["PageDescription"] = "Advanced admin tools for managing all ingredients with bulk operations.";
ViewData["ActionButtonText"] = "Create New Ingredient";
ViewData["ActionButtonAction"] = "Create";
ViewData["ActionButtonController"] = "Ingredient";
}
<partial name="_PageHeader" />

<!-- Message Alerts -->
<partial name="_MessageAlerts" />

<div class="container">
    <!-- Search & Filters -->
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-light">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="bi bi-search me-2"></i>Search & Filters
                </h5>
                <button class="btn btn-sm btn-outline-secondary" type="button"
                        data-bs-toggle="collapse" data-bs-target="#advancedFilters"
                        aria-expanded="false">
                    <i class="bi bi-sliders me-1"></i>Advanced
                </button>
            </div>
        </div>
        <div class="card-body">
            <form id="searchFilterForm" method="get" asp-action="ManageIngredients">
                <!-- Basic Search Row -->
                <div class="row g-3 align-items-end mb-3">
                    <!-- Search Input with Autocomplete -->
                    <div class="col-md-5">
                        <label for="searchTerm" class="form-label">Search</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-search"></i></span>
                            <input type="text" class="form-control" id="searchTerm" name="searchTerm"
                                   placeholder="Search ingredients by name, category, or description..."
                                   value="@ViewData["SearchTerm"]" autocomplete="off">
                            <button type="button" class="btn btn-outline-secondary" id="clearSearch">
                                <i class="bi bi-x"></i>
                            </button>
                        </div>
                    </div>

                    <!-- Sort By -->
                    <div class="col-md-3">
                        <label for="sortBy" class="form-label">Sort By</label>
                        <select class="form-select" id="sortBy" name="sortBy">
                            <option value="name" selected="@(ViewData["SortBy"]?.ToString() == "name")">Name A-Z</option>
                            <option value="name_desc" selected="@(ViewData["SortBy"]?.ToString() == "name_desc")">Name Z-A</option>
                            <option value="category" selected="@(ViewData["SortBy"]?.ToString() == "category")">Category</option>
                            <option value="measurement" selected="@(ViewData["SortBy"]?.ToString() == "measurement")">Measurement Type</option>
                            <option value="newest" selected="@(ViewData["SortBy"]?.ToString() == "newest")">Recently Added</option>
                            <option value="author" selected="@(ViewData["SortBy"]?.ToString() == "author")">Created By</option>
                        </select>
                    </div>

                    <!-- Actions -->
                    <div class="col-md-4">
                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-primary flex-fill">
                                <i class="bi bi-search me-1"></i>Search
                            </button>
                            <button type="button" class="btn btn-outline-secondary" id="resetFilters">
                                <i class="bi bi-arrow-clockwise"></i>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Categories Filter -->
                @if (ViewBag.Categories != null)
                {
                <div class="row mb-3">
                    <div class="col-12">
                        <label class="form-label">Categories</label>
                        <div class="d-flex flex-wrap gap-2">
                            <a href="@Url.Action("ManageIngredients")"
                               class="btn @(ViewData["Category"] == null ? "btn-primary" : "btn-outline-primary") btn-sm">
                                All
                            </a>
                            @foreach (var category in ViewBag.Categories)
                            {
                            <a href="@Url.Action("ManageIngredients", new { category = category, searchTerm = ViewData["SearchTerm"], sortBy = ViewData["SortBy"] })"
                               class="btn @(ViewData["Category"]?.ToString() == category ? "btn-primary" : "btn-outline-primary") btn-sm">
                                @category
                            </a>
                            }
                        </div>
                    </div>
                </div>
                }

                <!-- Advanced Filters (Collapsible) -->
                <div class="collapse" id="advancedFilters">
                    <div class="border-top pt-3">
                        <div class="row g-3">
                            <div class="col-md-3">
                                <label for="categoryFilter" class="form-label">Category</label>
                                <select class="form-select" id="categoryFilter" name="category">
                                    <option value="">All Categories</option>
                                    @if (ViewBag.Categories != null)
                                    {
                                    @foreach (var category in ViewBag.Categories)
                                    {
                                    <option value="@category" selected="@(ViewData["Category"]?.ToString() == category)">
                                        @category
                                    </option>
                                    }
                                    }
                                </select>
                            </div>

                            <div class="col-md-3">
                                <label for="measurementFilter" class="form-label">Measurement Type</label>
                                <select class="form-select" id="measurementFilter" name="measurement">
                                    <option value="">All Measurements</option>
                                    @if (ViewBag.Measurements != null)
                                    {
                                    @foreach (var measurement in ViewBag.Measurements)
                                    {
                                    <option value="@measurement" selected="@(ViewData["Measurement"]?.ToString() == measurement)">
                                        @measurement
                                    </option>
                                    }
                                    }
                                </select>
                            </div>

                            <div class="col-md-3">
                                <label for="authorFilter" class="form-label">Created By</label>
                                <select class="form-select" id="authorFilter" name="createdBy">
                                    <option value="">All Authors</option>
                                    @if (ViewBag.Authors != null)
                                    {
                                    @foreach (var author in ViewBag.Authors)
                                    {
                                    <option value="@author.Id" selected="@(ViewData["CreatedBy"]?.ToString() == author.Id)">
                                        @author.Name
                                    </option>
                                    }
                                    }
                                </select>
                            </div>

                            <div class="col-md-3">
                                <label for="hasDescriptionFilter" class="form-label">Description Status</label>
                                <select class="form-select" id="hasDescriptionFilter" name="hasDescription">
                                    <option value="">Any</option>
                                    <option value="true" selected="@(ViewData["HasDescription"]?.ToString() == "true")">Has Description</option>
                                    <option value="false" selected="@(ViewData["HasDescription"]?.ToString() == "false")">No Description</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Hidden fields to maintain state -->
                <input type="hidden" name="page" value="@(ViewBag.CurrentPage ?? 1)" />
            </form>
        </div>
    </div>

    <!-- Admin Bulk Actions Panel -->
    @if (isAdminView)
    {
    <div class="card shadow-sm mb-4 d-none" id="bulkActionsPanel">
        <div class="card-header bg-warning text-dark">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="bi bi-check2-square me-2"></i>Bulk Actions
                    <span class="badge bg-primary ms-2" id="selectedCount">0</span> selected
                </h5>
                <button type="button" class="btn btn-sm btn-outline-dark" id="clearBulkSelection">
                    <i class="bi bi-x me-1"></i>Clear Selection
                </button>
            </div>
        </div>
        <div class="card-body">
            <form id="bulkActionForm" method="post" asp-action="BulkAction">
                @Html.AntiForgeryToken()
                <div class="row g-3">
                    <div class="col-md-4">
                        <label for="bulkAction" class="form-label">Choose Action</label>
                        <select class="form-select" id="bulkAction" name="action" required>
                            <option value="">Select an action...</option>
                            <option value="assignCategory">Assign Category</option>
                            <option value="changeCategory">Change Category</option>
                            <option value="clearCategory">Clear Category</option>
                            <option value="setMeasurement">Set Default Measurement</option>
                            <option value="clearMeasurement">Clear Measurement</option>
                            <option value="export">Export Selected</option>
                            <option value="delete">Delete Selected</option>
                        </select>
                    </div>
                    <div class="col-md-4" id="bulkActionOptions">
                        <!-- Dynamic options based on selected action -->
                    </div>
                    <div class="col-md-4 d-flex align-items-end">
                        <button type="submit" class="btn btn-warning w-100" id="executeBulkAction">
                            <i class="bi bi-lightning-charge me-1"></i>Execute Action
                        </button>
                    </div>
                </div>
                <!-- Hidden field for selected IDs -->
                <input type="hidden" id="selectedIds" name="ingredientIds" />
            </form>
        </div>
    </div>
    }

    <!-- Main Content Card -->
    <div class="card shadow-sm">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center">
                @if (isAdminView)
                {
                <div class="form-check me-3">
                    <input class="form-check-input" type="checkbox" id="selectAllItems">
                    <label class="form-check-label" for="selectAllItems">
                        Select All
                    </label>
                </div>
                }
                <h5 class="mb-0">@(isAdminView ? "Advanced " : "")Ingredient Management</h5>
            </div>
            <span class="badge bg-success rounded-pill">@totalIngredients total</span>
        </div>

        <!-- Content Body -->
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover table-striped mb-0" id="managementTable">
                    <thead class="table-light">
                    <tr>
                        @if (isAdminView)
                        {
                        <th scope="col" style="width: 40px;">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="selectAllHeader">
                            </div>
                        </th>
                        }
                        <th>Name</th>
                        <th>Category</th>
                        <th>Measurement</th>
                        <th>Description</th>
                        <th>Author</th>
                        <th>Created</th>
                        <th style="width: 200px;">Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    @if (Model != null && Model.Any())
                    {
                    @foreach (var ingredient in Model)
                    {
                    <tr data-item-id="@ingredient.Id" data-category="@ingredient.Category"
                        data-measurement="@ingredient.Measurement" class="management-table-row">
                        @if (isAdminView)
                        {
                        <td>
                            <div class="form-check">
                                <input class="form-check-input item-checkbox" type="checkbox"
                                       value="@ingredient.Id" id="item_@ingredient.Id">
                            </div>
                        </td>
                        }
                        <td>
                            <span class="fw-semibold">@ingredient.Name</span>
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(ingredient.Category))
                            {
                            <span class="badge bg-info text-dark">@ingredient.Category</span>
                            }
                            else
                            {
                            <span class="text-muted">-</span>
                            }
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(ingredient.Measurement))
                            {
                            <span class="badge bg-secondary">@ingredient.Measurement</span>
                            }
                            else
                            {
                            <span class="text-muted">-</span>
                            }
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(ingredient.Description))
                            {
                            <span title="@ingredient.Description">
                                            @(ingredient.Description.Length > 60 ? ingredient.Description.Substring(0, 60) + "..." : ingredient.Description)
                                        </span>
                            }
                            else
                            {
                            <span class="text-muted">-</span>
                            }
                        </td>
                        <td>
                            @if (ingredient.CreatedBy != null)
                            {
                            <div class="d-flex align-items-center">
                                <div class="rounded-circle bg-secondary text-white d-flex align-items-center justify-content-center me-2"
                                     style="width: 24px; height: 24px; font-size: 0.75rem; font-weight: 600;">
                                    @ingredient.CreatedBy.UserName.FirstOrDefault().ToString().ToUpper()
                                </div>
                                <span class="small">@ingredient.CreatedBy.UserName</span>
                            </div>
                            }
                            else
                            {
                            <span class="text-muted">Unknown</span>
                            }
                        </td>
                        <td class="text-nowrap">
                            <span title="@ingredient.CreatedDate.ToString("F")">@ingredient.CreatedDate.ToString("MMM d, yyyy")</span>
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Details" asp-route-id="@ingredient.Id"
                                   class="btn btn-sm btn-outline-success" title="View details">
                                    <i class="bi bi-eye"></i>
                                    <span class="d-none d-lg-inline ms-1">View</span>
                                </a>
                                @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || ingredient.CreatedById == User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value))
                                {
                                <a asp-action="Edit" asp-route-id="@ingredient.Id"
                                   class="btn btn-sm btn-outline-alert" title="Edit ingredient">
                                    <i class="bi bi-pencil"></i>
                                    <span class="d-none d-lg-inline ms-1">Edit</span>
                                </a>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-item-btn"
                                        data-item-id="@ingredient.Id" data-item-name="@ingredient.Name"
                                        title="Delete ingredient">
                                    <i class="bi bi-trash"></i>
                                    <span class="d-none d-lg-inline ms-1">Delete</span>
                                </button>
                                }
                            </div>

                            <!-- Hidden delete form -->
                            <form id="delete-form-@ingredient.Id" asp-action="Delete" asp-route-id="@ingredient.Id"
                                  method="post" style="display: none;">
                                @Html.AntiForgeryToken()
                            </form>
                        </td>
                    </tr>
                    }
                    }
                    else
                    {
                    <tr>
                        <td colspan="@(isAdminView ? "8" : "7")" class="text-center py-5">
                            <div class="text-muted">
                                <i class="bi bi-inbox display-1 d-block mb-3"></i>
                                <h5>No ingredients found</h5>
                                <p>There are no ingredients matching your search criteria.</p>
                                <a asp-action="Create" class="btn btn-primary">
                                    <i class="bi bi-plus-circle me-1"></i>Create First Ingredient
                                </a>
                            </div>
                        </td>
                    </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pagination Footer -->
        @if (ViewBag.TotalPages > 1)
        {
        <div class="card-footer bg-light">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center mb-0">
                    @if (ViewBag.CurrentPage > 1)
                    {
                    <li class="page-item">
                        <a class="page-link" asp-action="ManageIngredients" asp-route-page="@(ViewBag.CurrentPage - 1)"
                           asp-route-searchTerm="@ViewData["SearchTerm"]" asp-route-sortBy="@ViewData["SortBy"]"
                           asp-route-category="@ViewData["Category"]" asp-route-measurement="@ViewData["Measurement"]"
                           asp-route-createdBy="@ViewData["CreatedBy"]" asp-route-hasDescription="@ViewData["HasDescription"]">Previous</a>
                    </li>
                    }

                    @for (int i = 1; i <= ViewBag.TotalPages; i++)
                    {
                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="ManageIngredients" asp-route-page="@i"
                           asp-route-searchTerm="@ViewData["SearchTerm"]" asp-route-sortBy="@ViewData["SortBy"]"
                           asp-route-category="@ViewData["Category"]" asp-route-measurement="@ViewData["Measurement"]"
                           asp-route-createdBy="@ViewData["CreatedBy"]" asp-route-hasDescription="@ViewData["HasDescription"]">@i</a>
                    </li>
                    }

                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                    {
                    <li class="page-item">
                        <a class="page-link" asp-action="ManageIngredients" asp-route-page="@(ViewBag.CurrentPage + 1)"
                           asp-route-searchTerm="@ViewData["SearchTerm"]" asp-route-sortBy="@ViewData["SortBy"]"
                           asp-route-category="@ViewData["Category"]" asp-route-measurement="@ViewData["Measurement"]"
                           asp-route-createdBy="@ViewData["CreatedBy"]" asp-route-hasDescription="@ViewData["HasDescription"]">Next</a>
                    </li>
                    }
                </ul>
            </nav>
        </div>
        }
    </div>

    <!-- Back Button -->
    <div class="text-center mt-4">
        <a asp-controller="Admin" asp-action="Index" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-1"></i>Back to Admin Dashboard
        </a>
    </div>
</div>

@section Scripts {
<!-- jQuery UI for autocomplete -->
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>

<!-- Use existing adminIngredientsManagement.js -->
<script src="~/js/modules/adminIngredientsManagement.js"></script>

<script>
    $(document).ready(function() {
        // Initialize admin ingredients management with config
        if (typeof AdminIngredientsManagement !== 'undefined') {
            AdminIngredientsManagement.init({
                manageUrl: '@Url.Action("ManageIngredients")',
                bulkActionUrl: '@Url.Action("BulkAction")',
                searchIngredientsUrl: '@Url.Action("SearchIngredients")'
            });

            // Set categories and measurements for bulk actions
            AdminIngredientsManagement.setCategories(@Html.Raw(Json.Serialize(ViewBag.Categories ?? new List<string>())));
            AdminIngredientsManagement.setMeasurements(@Html.Raw(Json.Serialize(ViewBag.Measurements ?? new List<string>())));
        } else {
            console.error('AdminIngredientsManagement not found');
        }
    });
</script>
}