@model IEnumerable<MealStack.Web.Controllers.UserViewModel>

@{
    ViewData["Title"] = "User Management";
}

<div class="mb-4">
    <h1>User Management</h1>
    <p class="text-muted">Manage user accounts and roles.</p>
</div>

@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="card shadow-sm mb-4">
    <div class="card-header d-flex justify-content-between align-items-center bg-light">
        <h5 class="mb-0">User Dashboard</h5>
        <span class="badge bg-primary rounded-pill">Total Users: @Model.Count()</span>
    </div>
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover table-striped mb-0">
                <thead class="table-light">
                <tr>
                    <th>Username</th>
                    <th>Email</th>
                    <th>Roles</th>
                    <th>Recipes</th>
                    <th>Email Confirmed</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var user in Model)
                {
                    <tr>
                        <td>
                            <form asp-action="UpdateUserUsername" method="post" class="d-flex">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="userId" value="@user.Id" />
                                <input type="text" name="username" value="@user.UserName" class="form-control form-control-sm" style="width: 120px;"
                                       placeholder="Set username" maxlength="10" pattern="[a-zA-Z]+" title="3-10 letters only" />
                                <button type="submit" class="btn btn-sm btn-outline-primary ms-2">Update</button>
                            </form>
                        </td>
                        <td>@user.Email</td>
                        <td>
                            @foreach (var role in user.Roles)
                            {
                                <span class="badge bg-@(role == "Admin" ? "danger" : role == "User" ? "primary" : "secondary") me-1">@role</span>
                            }
                        </td>
                        <td>
                            @if (user.RecipesCount > 0)
                            {
                                <span class="badge bg-success">@user.RecipesCount</span>
                            }
                            else
                            {
                                <span class="text-muted">0</span>
                            }
                        </td>
                        <td>
                            @if (user.EmailConfirmed)
                            {
                                <span class="badge bg-success">Yes</span>
                            }
                            else
                            {
                                <span class="badge bg-warning text-dark">No</span>
                            }
                        </td>
                        <td>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Manage Roles
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <form asp-action="ToggleUserRole" method="post">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="userId" value="@user.Id" />
                                            <input type="hidden" name="roleName" value="Admin" />
                                            <button type="submit" class="dropdown-item">
                                                @if (user.Roles.Contains("Admin"))
                                                {
                                                    <span>Remove Admin Role</span>
                                                }
                                                else
                                                {
                                                    <span>Add Admin Role</span>
                                                }
                                            </button>
                                        </form>
                                    </li>
                                    <li>
                                        <form asp-action="ToggleUserRole" method="post">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="userId" value="@user.Id" />
                                            <input type="hidden" name="roleName" value="User" />
                                            <button type="submit" class="dropdown-item">
                                                @if (user.Roles.Contains("User"))
                                                {
                                                    <span>Remove User Role</span>
                                                }
                                                else
                                                {
                                                    <span>Add User Role</span>
                                                }
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Validate username input
        document.addEventListener('DOMContentLoaded', function() {
            const usernameInputs = document.querySelectorAll('input[name="username"]');

            usernameInputs.forEach(input => {
                input.addEventListener('input', function() {
                    // Remove any non-alphabet characters
                    this.value = this.value.replace(/[^a-zA-Z]/g, '');

                    // Check length
                    if (this.value.length > 0 && this.value.length < 3) {
                        this.setCustomValidity('Username must be at least 3 characters');
                    } else {
                        this.setCustomValidity('');
                    }
                });

                input.addEventListener('invalid', function() {
                    if (this.value.length > 0 && this.value.length < 3) {
                        this.setCustomValidity('Username must be at least 3 characters');
                    } else if (!this.value.match(/^[a-zA-Z]+$/)) {
                        this.setCustomValidity('Username can only contain letters');
                    }
                });
            });
        });
    </script>
}