@model IEnumerable<MealStack.Infrastructure.Data.Entities.RecipeEntity>
@{
    ViewData["Title"] = "All Recipes";
}

<!-- Keep your existing header, search bar, etc. -->

<!-- Recipe Grid -->
<div class="container mb-5">
    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <h5 class="alert-heading">No recipes found!</h5>
            <p>We couldn't find any recipes matching your criteria.</p>
        </div>
    }
    else
    {
        <div class="row g-4">
            @foreach (var recipe in Model)
            {
                <partial name="_RecipeCard" model="recipe" />
            }
        </div>
    }
</div>

<!-- Add this for the AJAX token -->
<form id="__AjaxAntiForgeryForm">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script>
        function confirmDelete(id, name) {
            if (confirm(`Are you sure you want to delete the recipe "${name}"?`)) {
                document.getElementById(`delete-form-${id}`).submit();
            }
            return false;
        }

        // Favorite button functionality
        $(document).ready(function() {
            $('.favorite-btn').on('click', function() {
                const btn = $(this);
                const recipeId = btn.closest('.favorite-container').data('recipe-id');
                const isFavorite = btn.data('is-favorite') === true;
                const token = $('input[name="__RequestVerificationToken"]').val();
                
                btn.prop('disabled', true);
                
                $.ajax({
                    url: '/Recipe/ToggleFavorite',
                    type: 'POST',
                    data: {
                        recipeId: recipeId,
                        __RequestVerificationToken: token
                    },
                    success: function(result) {
                        if (result.success) {
                            btn.data('is-favorite', result.isFavorite);
                            
                            if (result.isFavorite) {
                                btn.find('i').removeClass('bi-heart').addClass('bi-heart-fill text-danger');
                            } else {
                                btn.find('i').removeClass('bi-heart-fill text-danger').addClass('bi-heart');
                            }
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Error toggling favorite:', error);
                        alert('Failed to update favorite status. Please try again.');
                    },
                    complete: function() {
                        btn.prop('disabled', false);
                    }
                });
            });
        });
    </script>
    
    <style>
        .hover-scale {
            transition: transform 0.3s ease;
        }
        .hover-scale:hover {
            transform: translateY(-5px);
        }
        
        .text-truncate-3 {
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }
        
        .favorite-btn {
            background: transparent;
            border: none;
            cursor: pointer;
            padding: 0;
        }
        
        .cook-time {
            color: #ff6920;
            font-size: 0.9rem;
            margin-top: 2px;
        }
    </style>
}