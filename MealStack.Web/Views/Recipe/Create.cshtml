@model MealStack.Infrastructure.Data.RecipeEntity

@{
ViewData["Title"] = "Create Recipe";
}

<div class="container py-4">
    <h1>Create Recipe</h1>

    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form id="recipeForm" asp-controller="Recipe" asp-action="Create" method="post" enctype="multipart/form-data">
                <partial name="_RecipeForm" model="Model" />
            </form>
        </div>
    </div>
</div>

<!-- Modal for adding new ingredient -->
<partial name="_IngredientModal" />

@section Scripts {
@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<!-- jQuery UI for autocomplete -->
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>

<!-- AJAX token -->
<partial name="_AjaxAntiForgeryToken" />

<!-- Load scripts in correct order -->
<script src="~/js/modules/ingredientManager.js" asp-append-version="true"></script>
<script src="~/js/modules/recipeFormValidator.js" asp-append-version="true"></script>

<!-- Initialize everything -->
<script>
    $(document).ready(function() {
        // Prevent multiple initializations
        if (window.mealStackInitialized) {
            console.log("MealStack already initialized, skipping...");
            return;
        }
        window.mealStackInitialized = true;

        console.log("Create Recipe page initializing...");

        // Initialize IngredientManager only once
        if (typeof IngredientManager !== 'undefined' && !window.ingredientManagerInitialized) {
            console.log("Initializing IngredientManager...");

            try {
                const success = IngredientManager.init({
                    autocompleteUrl: '@Url.Action("SearchIngredients", "Ingredient")',
                    createIngredientUrl: '@Url.Action("AddIngredientAjax", "Ingredient")'
                });

                if (success) {
                    window.ingredientManagerInitialized = true;
                    console.log("IngredientManager initialized successfully");
                }
            } catch (error) {
                console.error("Failed to initialize IngredientManager:", error);
            }
        }

        // Initialize form validator only once
        if (typeof RecipeFormValidator !== 'undefined' && !window.recipeFormValidatorInitialized) {
            console.log("Initializing RecipeFormValidator...");
            try {
                RecipeFormValidator.init();
                window.recipeFormValidatorInitialized = true;
            } catch (error) {
                console.error("Failed to initialize RecipeFormValidator:", error);
            }
        }

        console.log("Page initialization complete");
    });
</script>
}