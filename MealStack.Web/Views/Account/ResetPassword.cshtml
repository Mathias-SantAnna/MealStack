@model MealStack.Web.Models.ResetPasswordViewModel
@{
ViewData["Title"] = "Reset Password";
Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Reset Password - MealStack</title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="~/css/base.css" />
    <link rel="stylesheet" href="~/css/components.css" />
    <link rel="stylesheet" href="~/css/theme.css" />
</head>
<body class="auth-body">
<div class="auth-container">
    <div class="brand-header">
        <h1>
            <a asp-controller="Home" asp-action="Index" class="text-decoration-none">
                <i class="bi bi-journal-richtext me-2"></i>MealStack
            </a>
        </h1>
        <p class="tagline">Create your new password</p>
    </div>

    <div class="auth-card">
        <div class="auth-form active">
            <h3 class="text-center mb-4">
                <i class="bi bi-shield-lock me-2 text-primary"></i>Reset Password
            </h3>

            <p class="text-center text-muted mb-4">
                Enter your new password below.
            </p>

            @if (!ViewData.ModelState.IsValid)
            {
            <div class="alert alert-danger" role="alert">
                <i class="bi bi-exclamation-triangle me-2"></i>
                <div asp-validation-summary="ModelOnly" class="mb-0"></div>
            </div>
            }

            @if (TempData["Message"] != null)
            {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="bi bi-check-circle me-2"></i>@TempData["Message"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
            }

            <form id="resetPasswordForm" asp-controller="Account" asp-action="ResetPassword" method="post">
                @Html.AntiForgeryToken()

                <input type="hidden" asp-for="Email" />
                <input type="hidden" asp-for="Token" />

                <div class="mb-3">
                    <label class="form-label">Email Address</label>
                    <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-envelope"></i>
                            </span>
                        <input type="email" class="form-control" value="@Model.Email" readonly />
                    </div>
                    <small class="form-text text-muted">Resetting password for this email</small>
                </div>

                <div class="mb-3">
                    <label asp-for="Password" class="form-label">New Password</label>
                    <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-lock"></i>
                            </span>
                        <input asp-for="Password" class="form-control" placeholder="Enter your new password" autocomplete="new-password" />
                    </div>
                    <span asp-validation-for="Password" class="text-danger"></span>
                    <small class="form-text text-muted">Must be at least 6 characters long</small>
                </div>

                <div class="mb-4">
                    <label asp-for="ConfirmPassword" class="form-label">Confirm New Password</label>
                    <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-lock-fill"></i>
                            </span>
                        <input asp-for="ConfirmPassword" class="form-control" placeholder="Confirm your new password" autocomplete="new-password" />
                    </div>
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-primary mb-3" id="resetButton">
                    <i class="bi bi-check-circle me-2"></i>Reset Password
                </button>
            </form>

            <hr class="my-4">

            <div class="auth-links text-center">
                <p class="mb-2">Password reset successfully?</p>
                <a asp-controller="Account" asp-action="Login" class="btn btn-outline-success">
                    <i class="bi bi-box-arrow-in-right me-2"></i>Login with New Password
                </a>

                <div class="mt-3">
                    <small class="text-muted">
                        Need a new reset link?
                        <a asp-controller="Account" asp-action="ForgotPassword" class="text-decoration-none">Request here</a>
                    </small>
                </div>
            </div>
        </div>
    </div>

    <div class="auth-footer">
        <p>&copy; 2024 MealStack -
            <a asp-controller="Home" asp-action="Privacy">Privacy</a> |
            <a href="#">Terms</a> |
            <a href="#">Help</a>
        </p>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const passwordInput = document.querySelector('input[name="Password"]');
        const confirmInput = document.querySelector('input[name="ConfirmPassword"]');
        const form = document.getElementById('resetPasswordForm');
        const submitButton = document.getElementById('resetButton');

        if (confirmInput && passwordInput) {
            confirmInput.addEventListener('input', function() {
                if (this.value && this.value !== passwordInput.value) {
                    this.classList.add('is-invalid');
                } else {
                    this.classList.remove('is-invalid');
                }
            });

            passwordInput.addEventListener('input', function() {
                if (confirmInput.value && confirmInput.value !== this.value) {
                    confirmInput.classList.add('is-invalid');
                } else {
                    confirmInput.classList.remove('is-invalid');
                }
            });
        }

        form.addEventListener('submit', function() {
            const originalText = submitButton.innerHTML;

            submitButton.disabled = true;
            submitButton.classList.add('btn-loading');
            submitButton.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Resetting password...';

            setTimeout(() => {
                submitButton.disabled = false;
                submitButton.classList.remove('btn-loading');
                submitButton.innerHTML = originalText;
            }, 10000);
        });

        setTimeout(() => {
            const alerts = document.querySelectorAll('.alert-dismissible');
            alerts.forEach(alert => {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    });
</script>
</body>
</html>